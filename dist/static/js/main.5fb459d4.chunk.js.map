{"version":3,"sources":["components/layout/SignInLink.js","store/actions/authActions.js","components/layout/SignUpLink.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectAction.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","profile","react_default","a","createElement","className","react_router_dom","to","onClick","href","initials","SignUpLink","state","console","log","firebase","links","uid","layout_SignInLink","layout_SignUpLink","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","toDateString","ProjectList","projects","projects_ProjectSummary","Dashboard","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","_this$props","projects_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","email","password","handleChange","e","setState","defineProperty","target","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","name","authorID","add","objectSpread","Date","App","layout_Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5fb459d4.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from \"../../store/actions/authActions\";\r\n\r\nconst SignInLink = (props) => {\r\n  const { profile } = props;\r\n  return (\r\n    <ul className=\"right\">\r\n      <li><NavLink to='/createproject'>New Project</NavLink></li>\r\n      <li><a onClick={props.signOut} href='/'>Logout</a></li>\r\n      <li><NavLink to='/' className='btn btn-floating pink lighten -1'>{profile.initials}</NavLink></li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignInLink)\r\n","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n      const firebase = getFirebase();\r\n      \r\n      firebase.auth().signInWithEmailAndPassword(\r\n        credentials.email,\r\n        credentials.password\r\n      ).then(() => {\r\n        dispatch({ type: 'LOGIN_SUCCESS' });\r\n      }).catch((err) => {\r\n        dispatch({ type: 'LOGIN_ERROR', err });\r\n      });\r\n  \r\n    }\r\n  }\r\n  \r\n  export const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n      const firebase = getFirebase();\r\n  \r\n      firebase.auth().signOut().then(() => {\r\n        dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n      });\r\n    }\r\n  }\r\n  \r\n  export const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n      const firebase = getFirebase();\r\n      const firestore = getFirestore();\r\n  \r\n      firebase.auth().createUserWithEmailAndPassword(\r\n        newUser.email, \r\n        newUser.password\r\n      ).then(resp => {\r\n        return firestore.collection('users').doc(resp.user.uid).set({\r\n          firstName: newUser.firstName,\r\n          lastName: newUser.lastName,\r\n          initials: newUser.firstName[0] + newUser.lastName[0]\r\n        });\r\n      }).then(() => {\r\n        dispatch({ type: 'SIGNUP_SUCCESS' });\r\n      }).catch((err) => {\r\n        dispatch({ type: 'SIGNUP_ERROR', err});\r\n      });\r\n    }\r\n  }","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst SignUpLink = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li><NavLink to='/signup'>Signup</NavLink></li>\r\n      <li><NavLink to='/signin'>Login</NavLink></li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default SignUpLink\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport SignInLink from \"./SignInLink\";\r\nimport SignOutLink from \"./SignUpLink\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n  const links = auth.uid ? <SignInLink profile={profile}/> : <SignOutLink />\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken -3\">\r\n        <div className=\"container\">\r\n            <Link to='/' className=\"brand-logo\">Social World</Link>\r\n            {links}\r\n        </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state)\r\n  return{\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n  const {notifications} = props\r\n  console.log(notifications)\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">\r\n            Notifications\r\n          </span>\r\n          <ul className=\"notifications\">\r\n            {notifications && notifications.map(item => {\r\n              return (\r\n                <li key={item.id}>\r\n                  <span className=\"pink-text\">{item.user} </span>\r\n                  <span>{item.content}</span>\r\n                  <div className=\"grey-text note-date\">\r\n                    {moment(item.time.toDate()).fromNow()}\r\n                  </div>\r\n                </li>\r\n              )})}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notifications","import React from 'react'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n        <div className=\"card-content grey-text text-darken-3\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n            <p className=\"grey-text\">{project.createdAt.toDate().toDateString()}</p>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectSummary\r\n","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProjectList = ({projects}) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      <h1>Test</h1>\r\n      {projects && projects.map(project => {\r\n        return (\r\n          <Link to={'/project/' + project.id} key={project.id}>\r\n          <ProjectSummary project={project} />\r\n          </Link>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectList\r\n","import React, { Component } from 'react'\r\nimport Notifications from \"./Notifications\";\r\nimport ProjectList from \"../projects/ProjectList\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n//REDUX\r\nimport { connect } from 'react-redux';\r\n//\r\n\r\n//FIREBASE\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\n\r\nexport class Dashboard extends Component {\r\n  render() {\r\n    console.log(this.props)\r\n    const { projects, auth, notifications } = this.props\r\n\r\n    if(!auth.uid) return <Redirect to='/signin/' />\r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n          <div className=\"row\">\r\n              <div className=\"col s12 m6\"> \r\n                <ProjectList projects={projects} /> \r\n              </div>\r\n              <div className=\"col s12 m5 offset-m1\"> \r\n                <Notifications notifications={notifications}/>\r\n              </div>\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state)\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects', orderBy: ['createdAt', 'desc']},\r\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\r\n  ])\r\n)(Dashboard)\r\n\r\n// const Dashboard = (props) => {\r\n//     console.log(props)\r\n//     const { projects } = props\r\n//     return (\r\n//     <div className=\"dashboard container\">\r\n//         <div className=\"row\">\r\n//             <div className=\"col s12 m6\"> \r\n//               <ProjectList projects={projects} /> \r\n//             </div>\r\n//             <div className=\"col s12 m5 offset-m1\"> \r\n//               <Notifications/> \r\n//             </div>\r\n//         </div>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// CONNECT FUNCTION WAS NOT WORKING WITH CLASS COMPONENT","import React from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from 'redux';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst ProjectDetails = (props) => {\r\n    // console.log(props)\r\n    // const id = props.match.params.id\r\n    const { project, auth } = props;\r\n\r\n    if (!auth.uid) return <Redirect to='/signin/' />\r\n\r\n    if (project) {\r\n        return (\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{project.title}</span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                        <div>{project.createdAt.toDate().toDateString()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n          )\r\n    } else {\r\n        return (\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">Untitled</span>\r\n                        <p>No Post Yet</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>Posted by Unknown</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n          )\r\n        }\r\n    }\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n      project: project,\r\n      auth: state.firebase.auth\r\n    }\r\n  }\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'project'}\r\n    ])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../store/actions/authActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport class SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state)\r\n    }\r\n\r\n  render() {\r\n      const { authError, auth } = this.props\r\n      if (auth.uid) return <Redirect to='/' />\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={this.handleSubmit} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                    <div className=\"red-text center\">\r\n                        { authError ? <p>{ authError }</p>: null }\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nexport class SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    } \r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n\r\n  render() {\r\n    const { auth, authError } = this.props\r\n    if (auth.uid) return <Redirect to='/' />\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={this.handleSubmit} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3\">Register</h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"firstName\">First Name</label>\r\n                    <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"lastName\">Last Name</label>\r\n                    <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <button className=\"btn pink lighten-1 z-depth-0\">CREATE ACCOUNT</button>\r\n                    <div className=\"red-text center\">\r\n                        { authError ? <p>{ authError }</p> : null}\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from \"react-router-dom\";\r\n//REDUX\r\nimport { createProject } from \"../../store/actions/projectAction\";\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nexport class CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/')\r\n    }\r\n\r\n  render() {\r\n\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin/' />\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={this.handleSubmit} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"content\">Project Content</label>\r\n                    <textarea name=\"\" id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <button className=\"btn pink lighten-1 z-depth-0\">Save</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      auth: state.firebase.auth\r\n    }\r\n  }\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","\r\n//TRADITIONAL ACTION OF REDUX\r\n// export const createProject = (project) => {\r\n//     return {\r\n//         type: 'ADD_PROJECT',\r\n//         project: project\r\n//     }\r\n// }\r\n\r\n//WITH THUNK\r\nexport const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        //MAKE ASYNC CALL TO DATABASE\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        console.log(profile)\r\n        const authorID = getState().firebase.auth.uid;\r\n        console.log(authorID)\r\n        firestore.collection('projects').add({\r\n            ...project, \r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorID: authorID,\r\n            createdAt: new Date()\r\n            \r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_PROJECT', project});\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err })\r\n        })\r\n        \r\n    }\r\n};","import React, { Component } from 'react'\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nexport class App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar/>\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/createproject' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\nconst initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state=initState, action) => {\r\n\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n        return {\r\n            ...state,\r\n            authError: 'Login failed'\r\n        }\r\n        \r\n        case 'LOGIN_SUCCESS':\r\n        return {\r\n            ...state,\r\n            authError: null\r\n        }\r\n\r\n        case 'SIGNOUT_SUCCESS':\r\n        return state;\r\n\r\n        case 'SIGNUP_SUCCESS':\r\n        return {\r\n            ...state,\r\n            authError: null\r\n        }\r\n\r\n        case 'SIGNUP_ERROR':\r\n        return {\r\n            ...state,\r\n            authError: action.err.message\r\n        }\r\n\r\n        default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport default authReducer","\r\nconst initState = {\r\n    projects: [\r\n        {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n        {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\r\n        {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n\r\n    switch(action.type) {\r\n        case 'CREATE_PROJECT':\r\n        console.log('project created', action.project)\r\n        return state\r\n\r\n        case 'CREATE_PROJECT_ERROR':\r\n        console.log('project error', action.err)\r\n        return state\r\n        \r\n        default: console.log('default')\r\n        return state\r\n    }\r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer","\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n  // Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyD6SMou0XJL3-ln5JEpVqM8qLkXQZne3xw\",\r\n    authDomain: \"arnel-marioplan.firebaseapp.com\",\r\n    databaseURL: \"https://arnel-marioplan.firebaseio.com\",\r\n    projectId: \"arnel-marioplan\",\r\n    storageBucket: \"arnel-marioplan.appspot.com\",\r\n    messagingSenderId: \"323718177321\",\r\n    appId: \"1:323718177321:web:e0447e4e92fade5b\"\r\n  };\r\n\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore()\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n/////////////////REDUX\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk'\n\n//FIREBASE\n//OLD\nimport { getFirestore, reduxFirestore   } from \"redux-firestore\";\nimport { getFirebase, reactReduxFirebase   } from \"react-redux-firebase\";\n\nimport firebaseConfig from './config/fbConfig'\n\n//OLD\nconst store = createStore(rootReducer, \n    compose(\n    applyMiddleware(thunk.withExtraArgument ({getFirebase,getFirestore }) ),\n    reduxFirestore (firebaseConfig),\n    reactReduxFirebase (firebaseConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n    )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}